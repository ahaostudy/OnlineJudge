// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.23.4
// source: submit.proto

package submit

import (
	context "context"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type JudgeResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time    int64  `protobuf:"varint,1,opt,name=Time,proto3" json:"Time,omitempty"`
	Memory  int64  `protobuf:"varint,2,opt,name=Memory,proto3" json:"Memory,omitempty"`
	Status  int64  `protobuf:"varint,3,opt,name=Status,proto3" json:"Status,omitempty"`
	Message string `protobuf:"bytes,4,opt,name=Message,proto3" json:"Message,omitempty"`
	Output  string `protobuf:"bytes,5,opt,name=Output,proto3" json:"Output,omitempty"`
	Error   string `protobuf:"bytes,6,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *JudgeResult) Reset() {
	*x = JudgeResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_submit_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JudgeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JudgeResult) ProtoMessage() {}

func (x *JudgeResult) ProtoReflect() protoreflect.Message {
	mi := &file_submit_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JudgeResult.ProtoReflect.Descriptor instead.
func (*JudgeResult) Descriptor() ([]byte, []int) {
	return file_submit_proto_rawDescGZIP(), []int{0}
}

func (x *JudgeResult) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *JudgeResult) GetMemory() int64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *JudgeResult) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *JudgeResult) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *JudgeResult) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

func (x *JudgeResult) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type Submit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	UserID    int64  `protobuf:"varint,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
	ProblemID int64  `protobuf:"varint,3,opt,name=ProblemID,proto3" json:"ProblemID,omitempty"`
	Code      string `protobuf:"bytes,4,opt,name=Code,proto3" json:"Code,omitempty"`
	LangID    int64  `protobuf:"varint,5,opt,name=LangID,proto3" json:"LangID,omitempty"`
	Status    int64  `protobuf:"varint,6,opt,name=Status,proto3" json:"Status,omitempty"`
	Time      int64  `protobuf:"varint,7,opt,name=Time,proto3" json:"Time,omitempty"`
	Memory    int64  `protobuf:"varint,8,opt,name=Memory,proto3" json:"Memory,omitempty"`
	CreatedAt int64  `protobuf:"varint,9,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
}

func (x *Submit) Reset() {
	*x = Submit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_submit_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Submit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Submit) ProtoMessage() {}

func (x *Submit) ProtoReflect() protoreflect.Message {
	mi := &file_submit_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Submit.ProtoReflect.Descriptor instead.
func (*Submit) Descriptor() ([]byte, []int) {
	return file_submit_proto_rawDescGZIP(), []int{1}
}

func (x *Submit) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Submit) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *Submit) GetProblemID() int64 {
	if x != nil {
		return x.ProblemID
	}
	return 0
}

func (x *Submit) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Submit) GetLangID() int64 {
	if x != nil {
		return x.LangID
	}
	return 0
}

func (x *Submit) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Submit) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *Submit) GetMemory() int64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *Submit) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type DebugReqeust struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code   []byte `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Input  []byte `protobuf:"bytes,2,opt,name=Input,proto3" json:"Input,omitempty"`
	LangID int64  `protobuf:"varint,3,opt,name=LangID,proto3" json:"LangID,omitempty"`
}

func (x *DebugReqeust) Reset() {
	*x = DebugReqeust{}
	if protoimpl.UnsafeEnabled {
		mi := &file_submit_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugReqeust) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugReqeust) ProtoMessage() {}

func (x *DebugReqeust) ProtoReflect() protoreflect.Message {
	mi := &file_submit_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugReqeust.ProtoReflect.Descriptor instead.
func (*DebugReqeust) Descriptor() ([]byte, []int) {
	return file_submit_proto_rawDescGZIP(), []int{2}
}

func (x *DebugReqeust) GetCode() []byte {
	if x != nil {
		return x.Code
	}
	return nil
}

func (x *DebugReqeust) GetInput() []byte {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *DebugReqeust) GetLangID() int64 {
	if x != nil {
		return x.LangID
	}
	return 0
}

type DebugResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int64        `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Result     *JudgeResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *DebugResponse) Reset() {
	*x = DebugResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_submit_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugResponse) ProtoMessage() {}

func (x *DebugResponse) ProtoReflect() protoreflect.Message {
	mi := &file_submit_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugResponse.ProtoReflect.Descriptor instead.
func (*DebugResponse) Descriptor() ([]byte, []int) {
	return file_submit_proto_rawDescGZIP(), []int{3}
}

func (x *DebugResponse) GetStatusCode() int64 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *DebugResponse) GetResult() *JudgeResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type SubmitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemID int64  `protobuf:"varint,1,opt,name=ProblemID,proto3" json:"ProblemID,omitempty"`
	Code      []byte `protobuf:"bytes,2,opt,name=Code,proto3" json:"Code,omitempty"`
	LangID    int64  `protobuf:"varint,3,opt,name=LangID,proto3" json:"LangID,omitempty"`
	UserID    int64  `protobuf:"varint,4,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *SubmitRequest) Reset() {
	*x = SubmitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_submit_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitRequest) ProtoMessage() {}

func (x *SubmitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_submit_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitRequest.ProtoReflect.Descriptor instead.
func (*SubmitRequest) Descriptor() ([]byte, []int) {
	return file_submit_proto_rawDescGZIP(), []int{4}
}

func (x *SubmitRequest) GetProblemID() int64 {
	if x != nil {
		return x.ProblemID
	}
	return 0
}

func (x *SubmitRequest) GetCode() []byte {
	if x != nil {
		return x.Code
	}
	return nil
}

func (x *SubmitRequest) GetLangID() int64 {
	if x != nil {
		return x.LangID
	}
	return 0
}

func (x *SubmitRequest) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type SubmitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int64 `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	SubmitID   int64 `protobuf:"varint,2,opt,name=SubmitID,proto3" json:"SubmitID,omitempty"`
}

func (x *SubmitResponse) Reset() {
	*x = SubmitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_submit_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitResponse) ProtoMessage() {}

func (x *SubmitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_submit_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitResponse.ProtoReflect.Descriptor instead.
func (*SubmitResponse) Descriptor() ([]byte, []int) {
	return file_submit_proto_rawDescGZIP(), []int{5}
}

func (x *SubmitResponse) GetStatusCode() int64 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *SubmitResponse) GetSubmitID() int64 {
	if x != nil {
		return x.SubmitID
	}
	return 0
}

type SubmitContestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemID int64  `protobuf:"varint,1,opt,name=ProblemID,proto3" json:"ProblemID,omitempty"`
	Code      []byte `protobuf:"bytes,2,opt,name=Code,proto3" json:"Code,omitempty"`
	LangID    int64  `protobuf:"varint,3,opt,name=LangID,proto3" json:"LangID,omitempty"`
	UserID    int64  `protobuf:"varint,4,opt,name=UserID,proto3" json:"UserID,omitempty"`
	ContestID int64  `protobuf:"varint,5,opt,name=ContestID,proto3" json:"ContestID,omitempty"`
}

func (x *SubmitContestRequest) Reset() {
	*x = SubmitContestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_submit_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitContestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitContestRequest) ProtoMessage() {}

func (x *SubmitContestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_submit_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitContestRequest.ProtoReflect.Descriptor instead.
func (*SubmitContestRequest) Descriptor() ([]byte, []int) {
	return file_submit_proto_rawDescGZIP(), []int{6}
}

func (x *SubmitContestRequest) GetProblemID() int64 {
	if x != nil {
		return x.ProblemID
	}
	return 0
}

func (x *SubmitContestRequest) GetCode() []byte {
	if x != nil {
		return x.Code
	}
	return nil
}

func (x *SubmitContestRequest) GetLangID() int64 {
	if x != nil {
		return x.LangID
	}
	return 0
}

func (x *SubmitContestRequest) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *SubmitContestRequest) GetContestID() int64 {
	if x != nil {
		return x.ContestID
	}
	return 0
}

type SubmitContestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int64 `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	SubmitID   int64 `protobuf:"varint,2,opt,name=SubmitID,proto3" json:"SubmitID,omitempty"`
}

func (x *SubmitContestResponse) Reset() {
	*x = SubmitContestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_submit_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitContestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitContestResponse) ProtoMessage() {}

func (x *SubmitContestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_submit_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitContestResponse.ProtoReflect.Descriptor instead.
func (*SubmitContestResponse) Descriptor() ([]byte, []int) {
	return file_submit_proto_rawDescGZIP(), []int{7}
}

func (x *SubmitContestResponse) GetStatusCode() int64 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *SubmitContestResponse) GetSubmitID() int64 {
	if x != nil {
		return x.SubmitID
	}
	return 0
}

type GetSubmitResultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubmitID int64 `protobuf:"varint,1,opt,name=SubmitID,proto3" json:"SubmitID,omitempty"`
}

func (x *GetSubmitResultRequest) Reset() {
	*x = GetSubmitResultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_submit_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubmitResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubmitResultRequest) ProtoMessage() {}

func (x *GetSubmitResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_submit_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubmitResultRequest.ProtoReflect.Descriptor instead.
func (*GetSubmitResultRequest) Descriptor() ([]byte, []int) {
	return file_submit_proto_rawDescGZIP(), []int{8}
}

func (x *GetSubmitResultRequest) GetSubmitID() int64 {
	if x != nil {
		return x.SubmitID
	}
	return 0
}

type GetSubmitResultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int64        `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Result     *JudgeResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *GetSubmitResultResponse) Reset() {
	*x = GetSubmitResultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_submit_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubmitResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubmitResultResponse) ProtoMessage() {}

func (x *GetSubmitResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_submit_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubmitResultResponse.ProtoReflect.Descriptor instead.
func (*GetSubmitResultResponse) Descriptor() ([]byte, []int) {
	return file_submit_proto_rawDescGZIP(), []int{9}
}

func (x *GetSubmitResultResponse) GetStatusCode() int64 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *GetSubmitResultResponse) GetResult() *JudgeResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetSubmitListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID    int64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	ProblemID int64 `protobuf:"varint,2,opt,name=ProblemID,proto3" json:"ProblemID,omitempty"`
}

func (x *GetSubmitListRequest) Reset() {
	*x = GetSubmitListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_submit_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubmitListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubmitListRequest) ProtoMessage() {}

func (x *GetSubmitListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_submit_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubmitListRequest.ProtoReflect.Descriptor instead.
func (*GetSubmitListRequest) Descriptor() ([]byte, []int) {
	return file_submit_proto_rawDescGZIP(), []int{10}
}

func (x *GetSubmitListRequest) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *GetSubmitListRequest) GetProblemID() int64 {
	if x != nil {
		return x.ProblemID
	}
	return 0
}

type GetSubmitListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int64     `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	SubmitList []*Submit `protobuf:"bytes,2,rep,name=SubmitList,proto3" json:"SubmitList,omitempty"`
}

func (x *GetSubmitListResponse) Reset() {
	*x = GetSubmitListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_submit_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubmitListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubmitListResponse) ProtoMessage() {}

func (x *GetSubmitListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_submit_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubmitListResponse.ProtoReflect.Descriptor instead.
func (*GetSubmitListResponse) Descriptor() ([]byte, []int) {
	return file_submit_proto_rawDescGZIP(), []int{11}
}

func (x *GetSubmitListResponse) GetStatusCode() int64 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *GetSubmitListResponse) GetSubmitList() []*Submit {
	if x != nil {
		return x.SubmitList
	}
	return nil
}

type GetSubmitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID int64 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetSubmitRequest) Reset() {
	*x = GetSubmitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_submit_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubmitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubmitRequest) ProtoMessage() {}

func (x *GetSubmitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_submit_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubmitRequest.ProtoReflect.Descriptor instead.
func (*GetSubmitRequest) Descriptor() ([]byte, []int) {
	return file_submit_proto_rawDescGZIP(), []int{12}
}

func (x *GetSubmitRequest) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

type GetSubmitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int64   `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Submit     *Submit `protobuf:"bytes,2,opt,name=Submit,proto3" json:"Submit,omitempty"`
}

func (x *GetSubmitResponse) Reset() {
	*x = GetSubmitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_submit_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubmitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubmitResponse) ProtoMessage() {}

func (x *GetSubmitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_submit_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubmitResponse.ProtoReflect.Descriptor instead.
func (*GetSubmitResponse) Descriptor() ([]byte, []int) {
	return file_submit_proto_rawDescGZIP(), []int{13}
}

func (x *GetSubmitResponse) GetStatusCode() int64 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *GetSubmitResponse) GetSubmit() *Submit {
	if x != nil {
		return x.Submit
	}
	return nil
}

type SubmitStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count         int64 `protobuf:"varint,1,opt,name=Count,proto3" json:"Count,omitempty"`
	AcceptedCount int64 `protobuf:"varint,2,opt,name=AcceptedCount,proto3" json:"AcceptedCount,omitempty"`
}

func (x *SubmitStatus) Reset() {
	*x = SubmitStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_submit_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitStatus) ProtoMessage() {}

func (x *SubmitStatus) ProtoReflect() protoreflect.Message {
	mi := &file_submit_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitStatus.ProtoReflect.Descriptor instead.
func (*SubmitStatus) Descriptor() ([]byte, []int) {
	return file_submit_proto_rawDescGZIP(), []int{14}
}

func (x *SubmitStatus) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *SubmitStatus) GetAcceptedCount() int64 {
	if x != nil {
		return x.AcceptedCount
	}
	return 0
}

type GetSubmitStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetSubmitStatusRequest) Reset() {
	*x = GetSubmitStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_submit_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubmitStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubmitStatusRequest) ProtoMessage() {}

func (x *GetSubmitStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_submit_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubmitStatusRequest.ProtoReflect.Descriptor instead.
func (*GetSubmitStatusRequest) Descriptor() ([]byte, []int) {
	return file_submit_proto_rawDescGZIP(), []int{15}
}

type GetSubmitStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode   int64                   `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	SubmitStatus map[int64]*SubmitStatus `protobuf:"bytes,2,rep,name=SubmitStatus,proto3" json:"SubmitStatus,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetSubmitStatusResponse) Reset() {
	*x = GetSubmitStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_submit_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubmitStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubmitStatusResponse) ProtoMessage() {}

func (x *GetSubmitStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_submit_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubmitStatusResponse.ProtoReflect.Descriptor instead.
func (*GetSubmitStatusResponse) Descriptor() ([]byte, []int) {
	return file_submit_proto_rawDescGZIP(), []int{16}
}

func (x *GetSubmitStatusResponse) GetStatusCode() int64 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *GetSubmitStatusResponse) GetSubmitStatus() map[int64]*SubmitStatus {
	if x != nil {
		return x.SubmitStatus
	}
	return nil
}

type IsAcceptedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID    int64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	ProblemID int64 `protobuf:"varint,2,opt,name=ProblemID,proto3" json:"ProblemID,omitempty"`
}

func (x *IsAcceptedRequest) Reset() {
	*x = IsAcceptedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_submit_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsAcceptedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsAcceptedRequest) ProtoMessage() {}

func (x *IsAcceptedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_submit_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsAcceptedRequest.ProtoReflect.Descriptor instead.
func (*IsAcceptedRequest) Descriptor() ([]byte, []int) {
	return file_submit_proto_rawDescGZIP(), []int{17}
}

func (x *IsAcceptedRequest) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *IsAcceptedRequest) GetProblemID() int64 {
	if x != nil {
		return x.ProblemID
	}
	return 0
}

type IsAcceptedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int64 `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	IsAccepted bool  `protobuf:"varint,2,opt,name=IsAccepted,proto3" json:"IsAccepted,omitempty"`
}

func (x *IsAcceptedResponse) Reset() {
	*x = IsAcceptedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_submit_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsAcceptedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsAcceptedResponse) ProtoMessage() {}

func (x *IsAcceptedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_submit_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsAcceptedResponse.ProtoReflect.Descriptor instead.
func (*IsAcceptedResponse) Descriptor() ([]byte, []int) {
	return file_submit_proto_rawDescGZIP(), []int{18}
}

func (x *IsAcceptedResponse) GetStatusCode() int64 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *IsAcceptedResponse) GetIsAccepted() bool {
	if x != nil {
		return x.IsAccepted
	}
	return false
}

type GetAcceptedStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID int64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *GetAcceptedStatusRequest) Reset() {
	*x = GetAcceptedStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_submit_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAcceptedStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAcceptedStatusRequest) ProtoMessage() {}

func (x *GetAcceptedStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_submit_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAcceptedStatusRequest.ProtoReflect.Descriptor instead.
func (*GetAcceptedStatusRequest) Descriptor() ([]byte, []int) {
	return file_submit_proto_rawDescGZIP(), []int{19}
}

func (x *GetAcceptedStatusRequest) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type GetAcceptedStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode     int64          `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	AcceptedStatus map[int64]bool `protobuf:"bytes,2,rep,name=AcceptedStatus,proto3" json:"AcceptedStatus,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *GetAcceptedStatusResponse) Reset() {
	*x = GetAcceptedStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_submit_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAcceptedStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAcceptedStatusResponse) ProtoMessage() {}

func (x *GetAcceptedStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_submit_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAcceptedStatusResponse.ProtoReflect.Descriptor instead.
func (*GetAcceptedStatusResponse) Descriptor() ([]byte, []int) {
	return file_submit_proto_rawDescGZIP(), []int{20}
}

func (x *GetAcceptedStatusResponse) GetStatusCode() int64 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *GetAcceptedStatusResponse) GetAcceptedStatus() map[int64]bool {
	if x != nil {
		return x.AcceptedStatus
	}
	return nil
}

type GetLatestSubmitsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID int64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Count  int64 `protobuf:"varint,2,opt,name=Count,proto3" json:"Count,omitempty"`
}

func (x *GetLatestSubmitsRequest) Reset() {
	*x = GetLatestSubmitsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_submit_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestSubmitsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestSubmitsRequest) ProtoMessage() {}

func (x *GetLatestSubmitsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_submit_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestSubmitsRequest.ProtoReflect.Descriptor instead.
func (*GetLatestSubmitsRequest) Descriptor() ([]byte, []int) {
	return file_submit_proto_rawDescGZIP(), []int{21}
}

func (x *GetLatestSubmitsRequest) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *GetLatestSubmitsRequest) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetLatestSubmitsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int64     `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	SubmitList []*Submit `protobuf:"bytes,2,rep,name=SubmitList,proto3" json:"SubmitList,omitempty"`
}

func (x *GetLatestSubmitsResponse) Reset() {
	*x = GetLatestSubmitsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_submit_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestSubmitsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestSubmitsResponse) ProtoMessage() {}

func (x *GetLatestSubmitsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_submit_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestSubmitsResponse.ProtoReflect.Descriptor instead.
func (*GetLatestSubmitsResponse) Descriptor() ([]byte, []int) {
	return file_submit_proto_rawDescGZIP(), []int{22}
}

func (x *GetLatestSubmitsResponse) GetStatusCode() int64 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *GetLatestSubmitsResponse) GetSubmitList() []*Submit {
	if x != nil {
		return x.SubmitList
	}
	return nil
}

type DeleteSubmitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID     int64 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	UserID int64 `protobuf:"varint,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *DeleteSubmitRequest) Reset() {
	*x = DeleteSubmitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_submit_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSubmitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSubmitRequest) ProtoMessage() {}

func (x *DeleteSubmitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_submit_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSubmitRequest.ProtoReflect.Descriptor instead.
func (*DeleteSubmitRequest) Descriptor() ([]byte, []int) {
	return file_submit_proto_rawDescGZIP(), []int{23}
}

func (x *DeleteSubmitRequest) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *DeleteSubmitRequest) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type DeleteSubmitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int64 `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
}

func (x *DeleteSubmitResponse) Reset() {
	*x = DeleteSubmitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_submit_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSubmitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSubmitResponse) ProtoMessage() {}

func (x *DeleteSubmitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_submit_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSubmitResponse.ProtoReflect.Descriptor instead.
func (*DeleteSubmitResponse) Descriptor() ([]byte, []int) {
	return file_submit_proto_rawDescGZIP(), []int{24}
}

func (x *DeleteSubmitResponse) GetStatusCode() int64 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

var File_submit_proto protoreflect.FileDescriptor

var file_submit_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x22, 0x99, 0x01, 0x0a, 0x0b, 0x4a, 0x75, 0x64, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x4d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0xdc, 0x01, 0x0a, 0x06, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x61, 0x6e, 0x67, 0x49,
	0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x4d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x50, 0x0a, 0x0c, 0x44, 0x65, 0x62, 0x75, 0x67, 0x52, 0x65, 0x71, 0x65, 0x75, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4c,
	0x61, 0x6e, 0x67, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x4c, 0x61, 0x6e,
	0x67, 0x49, 0x44, 0x22, 0x5c, 0x0a, 0x0d, 0x44, 0x65, 0x62, 0x75, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x2e, 0x4a, 0x75,
	0x64, 0x67, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x71, 0x0a, 0x0d, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x44,
	0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x22, 0x4c, 0x0a, 0x0e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x49, 0x44, 0x22, 0x96, 0x01, 0x0a, 0x14, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x50,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x4c,
	0x61, 0x6e, 0x67, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a,
	0x09, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x49, 0x44, 0x22, 0x53, 0x0a, 0x15, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x49, 0x44,
	0x22, 0x34, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x49, 0x44, 0x22, 0x66, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x2b, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x2e, 0x4a, 0x75, 0x64, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x4c,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c,
	0x0a, 0x09, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x44, 0x22, 0x67, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2e, 0x0a, 0x0a, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x0a, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x22, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x22, 0x5b, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x26,
	0x0a, 0x06, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x06,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x22, 0x4a, 0x0a, 0x0c, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d,
	0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x18, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xe7, 0x01, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x55, 0x0a, 0x0c, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31,
	0x2e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0c, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a,
	0x55, 0x0a, 0x11, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x2e, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x49, 0x0a, 0x11, 0x49, 0x73, 0x41, 0x63, 0x63, 0x65,
	0x70, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49,
	0x44, 0x22, 0x54, 0x0a, 0x12, 0x49, 0x73, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x73, 0x41, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x49, 0x73, 0x41,
	0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x22, 0x32, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x63,
	0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0xdd, 0x01, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x5d, 0x0a, 0x0e, 0x41, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x35, 0x2e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63,
	0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x41, 0x0a, 0x13, 0x41, 0x63, 0x63, 0x65,
	0x70, 0x74, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x47, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14,
	0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x6a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x2e, 0x0a, 0x0a, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x2e, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x52, 0x0a, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0x3d, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22,
	0x36, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x32, 0xdb, 0x06, 0x0a, 0x0d, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x05, 0x44, 0x65, 0x62,
	0x75, 0x67, 0x12, 0x14, 0x2e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x2e, 0x44, 0x65, 0x62, 0x75,
	0x67, 0x52, 0x65, 0x71, 0x65, 0x75, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x73, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x39, 0x0a, 0x06, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x12, 0x15, 0x2e, 0x73, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0d,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x2e,
	0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x1e, 0x2e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x42, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x12,
	0x18, 0x2e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x73, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x2e, 0x73, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0a,
	0x49, 0x73, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x12, 0x19, 0x2e, 0x73, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x2e, 0x49, 0x73, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x2e, 0x49,
	0x73, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x2e, 0x73, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x57, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x73, 0x12, 0x1f, 0x2e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x12, 0x1b, 0x2e, 0x73, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x1e, 0x5a, 0x1c, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x6b, 0x69,
	0x74, 0x65, 0x78, 0x5f, 0x67, 0x65, 0x6e, 0x2f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x3b, 0x73,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_submit_proto_rawDescOnce sync.Once
	file_submit_proto_rawDescData = file_submit_proto_rawDesc
)

func file_submit_proto_rawDescGZIP() []byte {
	file_submit_proto_rawDescOnce.Do(func() {
		file_submit_proto_rawDescData = protoimpl.X.CompressGZIP(file_submit_proto_rawDescData)
	})
	return file_submit_proto_rawDescData
}

var file_submit_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_submit_proto_goTypes = []interface{}{
	(*JudgeResult)(nil),               // 0: submit.JudgeResult
	(*Submit)(nil),                    // 1: submit.Submit
	(*DebugReqeust)(nil),              // 2: submit.DebugReqeust
	(*DebugResponse)(nil),             // 3: submit.DebugResponse
	(*SubmitRequest)(nil),             // 4: submit.SubmitRequest
	(*SubmitResponse)(nil),            // 5: submit.SubmitResponse
	(*SubmitContestRequest)(nil),      // 6: submit.SubmitContestRequest
	(*SubmitContestResponse)(nil),     // 7: submit.SubmitContestResponse
	(*GetSubmitResultRequest)(nil),    // 8: submit.GetSubmitResultRequest
	(*GetSubmitResultResponse)(nil),   // 9: submit.GetSubmitResultResponse
	(*GetSubmitListRequest)(nil),      // 10: submit.GetSubmitListRequest
	(*GetSubmitListResponse)(nil),     // 11: submit.GetSubmitListResponse
	(*GetSubmitRequest)(nil),          // 12: submit.GetSubmitRequest
	(*GetSubmitResponse)(nil),         // 13: submit.GetSubmitResponse
	(*SubmitStatus)(nil),              // 14: submit.SubmitStatus
	(*GetSubmitStatusRequest)(nil),    // 15: submit.GetSubmitStatusRequest
	(*GetSubmitStatusResponse)(nil),   // 16: submit.GetSubmitStatusResponse
	(*IsAcceptedRequest)(nil),         // 17: submit.IsAcceptedRequest
	(*IsAcceptedResponse)(nil),        // 18: submit.IsAcceptedResponse
	(*GetAcceptedStatusRequest)(nil),  // 19: submit.GetAcceptedStatusRequest
	(*GetAcceptedStatusResponse)(nil), // 20: submit.GetAcceptedStatusResponse
	(*GetLatestSubmitsRequest)(nil),   // 21: submit.GetLatestSubmitsRequest
	(*GetLatestSubmitsResponse)(nil),  // 22: submit.GetLatestSubmitsResponse
	(*DeleteSubmitRequest)(nil),       // 23: submit.DeleteSubmitRequest
	(*DeleteSubmitResponse)(nil),      // 24: submit.DeleteSubmitResponse
	nil,                               // 25: submit.GetSubmitStatusResponse.SubmitStatusEntry
	nil,                               // 26: submit.GetAcceptedStatusResponse.AcceptedStatusEntry
}
var file_submit_proto_depIdxs = []int32{
	0,  // 0: submit.DebugResponse.Result:type_name -> submit.JudgeResult
	0,  // 1: submit.GetSubmitResultResponse.Result:type_name -> submit.JudgeResult
	1,  // 2: submit.GetSubmitListResponse.SubmitList:type_name -> submit.Submit
	1,  // 3: submit.GetSubmitResponse.Submit:type_name -> submit.Submit
	25, // 4: submit.GetSubmitStatusResponse.SubmitStatus:type_name -> submit.GetSubmitStatusResponse.SubmitStatusEntry
	26, // 5: submit.GetAcceptedStatusResponse.AcceptedStatus:type_name -> submit.GetAcceptedStatusResponse.AcceptedStatusEntry
	1,  // 6: submit.GetLatestSubmitsResponse.SubmitList:type_name -> submit.Submit
	14, // 7: submit.GetSubmitStatusResponse.SubmitStatusEntry.value:type_name -> submit.SubmitStatus
	2,  // 8: submit.SubmitService.Debug:input_type -> submit.DebugReqeust
	4,  // 9: submit.SubmitService.Submit:input_type -> submit.SubmitRequest
	6,  // 10: submit.SubmitService.SubmitContest:input_type -> submit.SubmitContestRequest
	8,  // 11: submit.SubmitService.GetSubmitResult:input_type -> submit.GetSubmitResultRequest
	10, // 12: submit.SubmitService.GetSubmitList:input_type -> submit.GetSubmitListRequest
	12, // 13: submit.SubmitService.GetSubmit:input_type -> submit.GetSubmitRequest
	15, // 14: submit.SubmitService.GetSubmitStatus:input_type -> submit.GetSubmitStatusRequest
	17, // 15: submit.SubmitService.IsAccepted:input_type -> submit.IsAcceptedRequest
	19, // 16: submit.SubmitService.GetAcceptedStatus:input_type -> submit.GetAcceptedStatusRequest
	21, // 17: submit.SubmitService.GetLatestSubmits:input_type -> submit.GetLatestSubmitsRequest
	23, // 18: submit.SubmitService.DeleteSubmit:input_type -> submit.DeleteSubmitRequest
	3,  // 19: submit.SubmitService.Debug:output_type -> submit.DebugResponse
	5,  // 20: submit.SubmitService.Submit:output_type -> submit.SubmitResponse
	7,  // 21: submit.SubmitService.SubmitContest:output_type -> submit.SubmitContestResponse
	9,  // 22: submit.SubmitService.GetSubmitResult:output_type -> submit.GetSubmitResultResponse
	11, // 23: submit.SubmitService.GetSubmitList:output_type -> submit.GetSubmitListResponse
	13, // 24: submit.SubmitService.GetSubmit:output_type -> submit.GetSubmitResponse
	16, // 25: submit.SubmitService.GetSubmitStatus:output_type -> submit.GetSubmitStatusResponse
	18, // 26: submit.SubmitService.IsAccepted:output_type -> submit.IsAcceptedResponse
	20, // 27: submit.SubmitService.GetAcceptedStatus:output_type -> submit.GetAcceptedStatusResponse
	22, // 28: submit.SubmitService.GetLatestSubmits:output_type -> submit.GetLatestSubmitsResponse
	24, // 29: submit.SubmitService.DeleteSubmit:output_type -> submit.DeleteSubmitResponse
	19, // [19:30] is the sub-list for method output_type
	8,  // [8:19] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_submit_proto_init() }
func file_submit_proto_init() {
	if File_submit_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_submit_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JudgeResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_submit_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Submit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_submit_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebugReqeust); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_submit_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebugResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_submit_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_submit_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_submit_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitContestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_submit_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitContestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_submit_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubmitResultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_submit_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubmitResultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_submit_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubmitListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_submit_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubmitListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_submit_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubmitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_submit_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubmitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_submit_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_submit_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubmitStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_submit_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubmitStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_submit_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsAcceptedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_submit_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsAcceptedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_submit_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAcceptedStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_submit_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAcceptedStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_submit_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLatestSubmitsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_submit_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLatestSubmitsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_submit_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSubmitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_submit_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSubmitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_submit_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_submit_proto_goTypes,
		DependencyIndexes: file_submit_proto_depIdxs,
		MessageInfos:      file_submit_proto_msgTypes,
	}.Build()
	File_submit_proto = out.File
	file_submit_proto_rawDesc = nil
	file_submit_proto_goTypes = nil
	file_submit_proto_depIdxs = nil
}

var _ context.Context

// Code generated by Kitex v0.7.2. DO NOT EDIT.

type SubmitService interface {
	Debug(ctx context.Context, req *DebugReqeust) (res *DebugResponse, err error)
	Submit(ctx context.Context, req *SubmitRequest) (res *SubmitResponse, err error)
	SubmitContest(ctx context.Context, req *SubmitContestRequest) (res *SubmitContestResponse, err error)
	GetSubmitResult(ctx context.Context, req *GetSubmitResultRequest) (res *GetSubmitResultResponse, err error)
	GetSubmitList(ctx context.Context, req *GetSubmitListRequest) (res *GetSubmitListResponse, err error)
	GetSubmit(ctx context.Context, req *GetSubmitRequest) (res *GetSubmitResponse, err error)
	GetSubmitStatus(ctx context.Context, req *GetSubmitStatusRequest) (res *GetSubmitStatusResponse, err error)
	IsAccepted(ctx context.Context, req *IsAcceptedRequest) (res *IsAcceptedResponse, err error)
	GetAcceptedStatus(ctx context.Context, req *GetAcceptedStatusRequest) (res *GetAcceptedStatusResponse, err error)
	GetLatestSubmits(ctx context.Context, req *GetLatestSubmitsRequest) (res *GetLatestSubmitsResponse, err error)
	DeleteSubmit(ctx context.Context, req *DeleteSubmitRequest) (res *DeleteSubmitResponse, err error)
}
