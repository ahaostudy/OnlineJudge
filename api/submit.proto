syntax = "proto3";

import "api/judge.proto";

package submit;

option go_package = "api/submit;rpcSubmit";

service SubmitService {
    rpc Debug(DebugReqeust) returns (DebugResponse) {}
    rpc Submit(SubmitRequest) returns (SubmitResponse) {}
    rpc SubmitContest(SubmitContestRequest) returns (SubmitContestResponse) {}
    rpc GetSubmitResult(GetSubmitResultRequest) returns (GetSubmitResultResponse) {}
    rpc GetSubmitList(GetSubmitListRequest) returns (GetSubmitListResponse) {}
    rpc GetSubmit(GetSubmitRequest) returns (GetSubmitResponse) {}
    rpc GetSubmitStatus(GetSubmitStatusRequest) returns (GetSubmitStatusResponse) {}
    rpc IsAccepted(IsAcceptedRequest) returns (IsAcceptedResponse) {}
    rpc GetAcceptedStatus(GetAcceptedStatusRequest) returns (GetAcceptedStatusResponse) {}
    rpc GetLatestSubmits(GetLatestSubmitsRequest) returns (GetLatestSubmitsResponse) {}
    rpc DeleteSubmit(DeleteSubmitRequest) returns (DeleteSubmitResponse) {}
}

message Submit {
    int64 ID = 1;
    int64 UserID = 2;
    int64 ProblemID = 3;
    string Code = 4;
    int64 LangID = 5;
    int64 Status = 6;
    int64 Time = 7;
    int64 Memory = 8;
    int64 CreatedAt = 9;
}

message DebugReqeust {
    bytes Code = 1;
    bytes Input = 2;
    int64 LangID = 3;
}

message DebugResponse {
    int64 StatusCode = 1;
    judge.JudgeResult Result = 2;
}

message SubmitRequest {
    int64 ProblemID = 1;
    bytes Code = 2;
    int64 LangID = 3;
    int64 UserID = 4;
}

message SubmitResponse {
    int64 StatusCode = 1;
    int64 SubmitID = 2;
}

message SubmitContestRequest {
    int64 ProblemID = 1;
    bytes Code = 2;
    int64 LangID = 3;
    int64 UserID = 4;
    int64 ContestID = 5;
}

message SubmitContestResponse {
    int64 StatusCode = 1;
    int64 SubmitID = 2;
}

message GetSubmitResultRequest {
    int64 SubmitID = 1;
}

message GetSubmitResultResponse {
    int64 StatusCode = 1;
    judge.JudgeResult Result = 2;
}

message GetSubmitListRequest {
    int64 UserID = 1;
    int64 ProblemID = 2;
}

message GetSubmitListResponse {
    int64 StatusCode = 1;
    repeated Submit SubmitList = 2;
}

message GetSubmitRequest {
    int64 ID = 1;
}

message GetSubmitResponse {
    int64 StatusCode = 1;
    Submit Submit = 2;
}

message SubmitStatus {
    int64 Count = 1;
    int64 AcceptedCount = 2;
}

message GetSubmitStatusRequest {
}

message GetSubmitStatusResponse {
    int64 StatusCode = 1;
    map<int64, SubmitStatus> SubmitStatus = 2;
}

message IsAcceptedRequest {
    int64 UserID = 1;
    int64 ProblemID = 2;
}

message IsAcceptedResponse {
    int64 StatusCode = 1;
    bool IsAccepted = 2;
}

message GetAcceptedStatusRequest {
    int64 UserID = 1;
}

message GetAcceptedStatusResponse {
    int64 StatusCode = 1;
    map<int64, bool> AcceptedStatus = 2;
}

message GetLatestSubmitsRequest {
    int64 UserID = 1;
    int64 Count = 2;
}

message GetLatestSubmitsResponse {
    int64 StatusCode = 1;
    repeated Submit SubmitList = 2;
}

message DeleteSubmitRequest {
    int64 ID = 1;
    int64 UserID = 2;
}

message DeleteSubmitResponse {
    int64 StatusCode = 1;
}