syntax = "proto3";

package judge;

option go_package = "judge;judge";

service JudgeService {
    rpc Judge(JudgeRequest) returns (JudgeResponse) {}
    rpc GetResult(GetResultRequest) returns (GetResultResponse) {}
    rpc Debug(DebugRequest) returns (DebugResponse) {}
    rpc GetCode(GetCodeRequest) returns (GetCodeResponse) {}
}

message JudgeRequest {
    int64 ProblemID = 1;
    bytes Code = 2;
    int64 LangID = 3;
}

message JudgeResponse {
    int64 StatusCode = 1;
    string JudgeID = 2;
    string CodePath = 3;
}

message GetResultRequest {
    string JudgeID = 1;
}

message JudgeResult {
    int64 Time = 1;
    int64 Memory = 2;
    int64 Status = 3;
    string Message = 4;
    string Output = 5;
    string Error = 6;
}

message GetResultResponse {
    int64 StatusCode = 1;
    JudgeResult Result = 2;
}

message DebugRequest {
    bytes Code = 1;
    bytes Input = 2;
    int64 LangID = 3;
}

message DebugResponse {
    int64 StatusCode = 1;
    JudgeResult Result = 2;
}

message GetCodeRequest {
    string CodePath = 1;
}

message GetCodeResponse {
    int64 StatusCode = 1;
    bytes Code = 2;
}