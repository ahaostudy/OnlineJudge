syntax = "proto3";

package private;

option go_package = ".;rpcPrivate";


service PrivateService {
    rpc GetProblem(GetProblemRequest) returns (GetProblemResponse) {}
    rpc judge(JudgeRequest) returns (JudgeResponse) {}
    rpc getResult(GetResultRequest) returns (GetResultResponse) {}
}

message Problem {
    int64 ID = 1;
    string Title = 2;
    string Description = 3;
    int32 Difficulty = 4;
    string InputDesc = 5;
    string OutputDesc = 6;
    string DataRange = 7;
    string Tips = 8;
    int32 MaxTime = 9;
    int32 MaxMemory = 10;
    string Source = 11;
    int64 AuthorID = 12;
}

message GetProblemRequest {
    int64 problemID = 1;
}

message GetProblemResponse {
    int64 StatusCode = 1;
    Problem Problem = 2;
}

message JudgeRequest {
    int64 problemID = 1;
    bytes code = 2;
    int64 langID = 3;
}

message JudgeResponse {
    int64 StatusCode = 1;
    string judgeID = 2;
}

message GetResultRequest {
    string judgeID = 1;
}

message JudgeResult {
    int64 Time = 1;
	int64 Memory = 2;
	int64 Status = 3;
	string Message = 4;
	string Output = 5;
	string Error = 6;
}

message GetResultResponse {
    int64 StatusCode = 1;
    JudgeResult Result = 2;
}

// protoc --go_out=. problem.proto
// protoc --go-grpc_out=. problem.proto
